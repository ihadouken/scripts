#!/usr/bin/env bash

set -euo pipefail

_path="$(cd "$(dirname "${BASH_SOURCE[0]}")" && cd "$(dirname "$(readlink "${BASH_SOURCE[0]}" || echo ".")")" && pwd)"
if [[  -f "${_path}/_dm-helper.sh" ]]; then
  # shellcheck disable=SC1090,SC1091
  source "${_path}/_dm-helper.sh"
else
  # shellcheck disable=SC1090
  echo "No helper-script found"
fi

# script will not hit this if there is no config-file to load
# shellcheck disable=SC1090
source "$(get_config)"


main() {
  # Check if sounds_dir is a real directory 
  # shellcheck disable=SC2154
  [ ! -d "${mus_dir}" ] && err "The Music folder could not be found, place your sounds in ${mus_dir}."
  # Produces a listing of the sound files.
  # shellcheck disable=SC2154
  readarray -t _mus_list < <(find "${mus_dir}" \( -iname "*.mp3" -o -iname "*.m4a" -o -iname "*.ogg" -o -iname "*.webm" \) -printf '%P\n')
 
  printf "%s\n" "${_mus_list[@]}"

  socket="$XDG_CACHE_HOME/mpv-ipc-socket"

  # An array of options to choose.
  local _options=(
    "Choose Song"
    "Play Random Song"
    "Play/Pause Player"
    "Kill Player"
    #"Quit"
  )


  # Piping the _options array into dmenu.
  # We use "printf '%s\n'" to format the array one item to a line.
  choice=$(printf '%s\n' "${_options[@]}" | ${DMENU} 'Source:' "${@}")


  if [ "$choice" == "Choose Song" ]; then
    # Piping the musList array into dmenu.
    # We use "printf '%s\n'" to format the array one item to a line.
    choice=$(printf '%s\n' "${_mus_list[@]}" | sort | ${DMENU} 'Choose Song:' "$@")

    echo 'quit' | socat - $socket || echo "mpv was not running."

    # Play the chosen Song.
    #shellcheck disable=SC2154
    notify-send -u low -i /usr/share/icons/Papirus/32x32/apps/org.gnome.Music.svg "Now Playing ..." "$choice"

    mpv --no-video --input-ipc-server="$socket" "$mus_dir/$choice"

  elif [ "$choice" == "Play Random Song" ]; then
    getRand=$(printf '%s\n' "${_mus_list[@]}" | shuf -n 1)

    echo 'quit' | socat - "$socket" || echo "mpv was not running."

    notify-send -u low -i /usr/share/icons/Papirus/32x32/apps/org.gnome.Music.svg "Now Playing ..." "$getRand "

    # Play random song file.
    mpv --no-video --input-ipc-server="$socket" "$mus_dir/$getRand"

    # ffplay -nodisp -loop 0 "$sounds_dir/$getRand" &

  elif [ "$choice" == "Kill Player" ]; then
    echo 'quit' | socat - "$socket" && exit 0 || echo "mpv was not running."
    
  elif [ "$choice" == "Play/Pause Player" ]; then
    echo "cycle pause" | socat - "$socket"

   else
     echo "Program terminated." && exit 0
  fi
}

[[ "${BASH_SOURCE[0]}" == "${0}" ]] && main "$@"
